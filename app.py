import streamlit as st

st.set_page_config(page_title="Recomendador de √Åreas Lucrativas", layout="wide")

st.title("üîç Recomendador de √Åreas Lucrativas na Internet")
st.markdown("Responda √†s perguntas abaixo para receber recomenda√ß√µes de √°reas com potencial de lucro acima de R$10.000/m√™s.")

# Formul√°rio de entrada
with st.form("perfil_form"):
    tempo_dia = st.slider("Quantas horas por dia voc√™ pode dedicar?", 0, 12, 4)
    experiencia = st.selectbox("Qual seu n√≠vel atual de experi√™ncia com internet/digital?", ["nenhuma", "baixa", "m√©dia", "alta"])
    capital_inicial = st.selectbox("Qual o capital inicial dispon√≠vel?", ["nenhum", "baixo", "m√©dio", "alto"])
    preferencias = st.multiselect("Quais atividades voc√™ tem mais interesse?", ["v√≠deo", "tr√°fego pago", "vender servi√ßo", "ensinar", "escrever", "design"])
    submit = st.form_submit_button("Gerar Recomenda√ß√£o")

# Fun√ß√£o de recomenda√ß√£o
@st.cache_data
def recomendar_areas(tempo_dia, experiencia, capital_inicial, preferencias):
    recomendacoes = []

    if tempo_dia < 2:
        recomendacoes.append("Freelancing r√°pido (ex: microtarefas, revis√£o de texto)")
        if 'escrever' in preferencias:
            recomendacoes.append("Copywriting para afiliados")
        if experiencia in ['m√©dia', 'alta']:
            recomendacoes.append("Consultoria expressa via redes sociais")

    if 2 <= tempo_dia < 5:
        if 'v√≠deo' in preferencias:
            recomendacoes.append("YouTube Shorts + Afiliados")
        if capital_inicial in ['baixo', 'm√©dio'] and 'tr√°fego pago' in preferencias:
            recomendacoes.append("Mini-funnel com PLR e tr√°fego pago")
        recomendacoes.append("Servi√ßos de design ou edi√ß√£o para Instagram/TikTok")

    if tempo_dia >= 5:
        if capital_inicial in ['m√©dio', 'alto']:
            recomendacoes.append("Dropshipping com tr√°fego pago")
            recomendacoes.append("Lan√ßamento de infoproduto")
        if experiencia == 'alta' and 'ensinar' in preferencias:
            recomendacoes.append("Mentoria/consultoria personalizada")
        recomendacoes.append("Cria√ß√£o de canal no YouTube com SEO e monetiza√ß√£o")

    if capital_inicial == 'nenhum' and experiencia == 'nenhuma':
        recomendacoes.append("TikTok org√¢nico com produtos de afiliado")

    return list(set(recomendacoes))

# Detalhamento dos planos
planos = {
    "YouTube Shorts + Afiliados": [
        "1. Escolha um nicho lucrativo (ex: finan√ßas, emagrecimento, produtividade).",
        "2. Crie uma conta no YouTube e personalize seu canal.",
        "3. Encontre produtos digitais em Hotmart, Eduzz, Amazon Afiliados.",
        "4. Crie v√≠deos curtos com ganchos fortes e chamadas para a√ß√£o.",
        "5. Use CapCut ou Canva para edi√ß√£o.",
        "6. Poste diariamente com t√≠tulos otimizados.",
        "7. Inclua o link de afiliado na descri√ß√£o.",
        "8. Aplique copywriting para melhorar os CTAs.",
        "9. Monitore os v√≠deos que mais convertem."
    ],
    "Mini-funnel com PLR e tr√°fego pago": [
        "1. Escolha um nicho validado.",
        "2. Compre um produto PLR (IDPLR.com).",
        "3. Crie uma landing page (Systeme.io, Notion).",
        "4. Configure um dom√≠nio personalizado.",
        "5. Crie an√∫ncios para Facebook, Instagram ou TikTok Ads.",
        "6. Comece com or√ßamento pequeno (R$10‚Äì30/dia).",
        "7. Otimize com base em CTR, convers√£o e ROI.",
        "8. Reinvista os lucros em tr√°fego e lista de emails.",
        "9. Automatize com funis e email marketing."
    ]
}

# Resultado
if submit:
    recomendacoes = recomendar_areas(tempo_dia, experiencia, capital_inicial, preferencias)
    st.subheader("üîÆ √Åreas recomendadas para voc√™:")
    for area in recomendacoes:
        st.markdown(f"### ‚úÖ {area}")
        if area in planos:
            with st.expander("Ver plano passo a passo"):
                for passo in planos[area]:
                    st.markdown(f"- {passo}")
